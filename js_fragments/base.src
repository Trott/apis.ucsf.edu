var UCSF = UCSF || (function () {
    'use strict';

    // Using Zepto for Android 4.2.2. + Galaxy S4 + PhoneGap support.
    var usingZepto = typeof Zepto !== 'undefined' && Zepto.ajax;

    var me = {
        serialize: function (obj, prefix) {
            var str = [];
            for (var p in obj) {
                var k = prefix ? prefix + "[" + p + "]" : p, v = obj[p];
                str.push(typeof v === "object" ?
                    this.serialize(v, k) :
                    encodeURIComponent(k) + "=" + encodeURIComponent(v));
            }
            return str.join("&");
        },

        createCORSRequest: function (method, url, success, failure) {
            var xhr;

            // Using Zepto for Android 4.2.2. + Galaxy S4 + PhoneGap support.
            if (usingZepto) {
                Zepto.ajax({
                    type: 'GET',
                    url: url,
                    success: success,
                    error: failure
                });
                xhr = null;
            } else {
                xhr = new window.XMLHttpRequest();
                if ("withCredentials" in xhr) {
                    // XHR for Chrome/Firefox/Opera/Safari.
                    xhr.open(method, url);
                }  else if (typeof XDomainRequest !== "undefined") {
                    // XDomainRequest for IE8+.
                    xhr = new XDomainRequest();
                    xhr.open(method, url);
                } else {
                    xhr = null;
                }
            }
            return xhr;
        },

        createRequestString: function(url, options) {
            var separator = url.indexOf('?')===-1 ? '?' : '&';
            return url + separator + this.serialize(options);
        },

        run: function (what, options, success, failure) {
            failure = failure || function (obj) {window.alert(obj.statusText||'An error occurred. Please try again.');};
            var reqString = UCSF.createRequestString('http://apis.ucsf.edu/' + what, options);
            var xhr = UCSF.createCORSRequest('GET', reqString, success, failure);

            if (xhr !== null) {
                xhr.onload = function () {
                    success(JSON.parse(xhr.responseText));
                };
                xhr.onerror = failure;
                xhr.send(null);
            } else {
                if (! usingZepto) {
                    failure('Cannot create CORS/XHR request');
                }
            }
        }
    };

    return me;
}());